常用手法	-	
	由核心类向它依赖接口类展开去写
	new IService(){ pulic void get(){}};
	组合
	多态
	重载
	泛型 public <T> T create(Class<T> clazz); class Factory<K,V>{} 
	public abstract class Job{ public abstract void run(){}; public void log(){this.run();}}
		public class MyJob extends Job{public void run(){};}
	单例模式
	
	for{}
	while{}
	if{}
	switch{}
	
	enum
	interface
	abstract class
	
	Object... arguments
	HessianConnection connection = super.open(url);
	task.setSearchService(this);
	
常用api	-	
	String
	List
	Map
	Array
	Set
	Thread
	Runnable
	FileUtils
	注解
	
	charAt()
	
	
		
常用api	-	先记住有些什么功能，用的时候再详细查看
	package:
		java awt - 图形界面
		
transient - 短暂的，不会被序列化持久化到磁盘里，防止敏感信息泄露
java -jar test.jar	-	